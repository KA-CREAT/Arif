// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  userId    String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String // Keep it as password in schema
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Products {
  productId     String      @id @default(uuid())
  name          String
  price         Float
  stockQuantity Int
  rating        Float?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  Sales         Sales[]
  Purchases     Purchases[]
}

model Sales {
  saleId      String   @id
  productId   String
  timestamp   DateTime
  quantity    Int
  unitPrice   Float
  totalAmount Float
  product     Products @relation(fields: [productId], references: [productId])
}

model Purchases {
  purchaseId  String   @id
  productId   String
  timestamp   DateTime
  quantity    Int
  unitPrice   Float
  totalAmount Float
  product     Products @relation(fields: [productId], references: [productId])
}

model Expenses {
  expenseId String   @id
  category  String
  amount    Float
  timestamp DateTime
}

model SalesSummary {
  id               String   @id @default(uuid())
  totalValue       Float
  changePercentage Float?
  date             DateTime @default(now())
}

model PurchaseSummary {
  id               String   @id @default(uuid())
  totalPurchased   Float
  changePercentage Float?
  date             DateTime @default(now())
}

model ExpenseSummary {
  id            String   @id @default(uuid())
  totalExpenses Float
  date          DateTime @default(now())
}

model ExpenseByCategory {
  id       String   @id @default(uuid())
  category String
  amount   Float
  date     DateTime @default(now())
}
